name: OpenWrt Builder

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable SSH debugging session'
        required: false
        default: 'false'
        type: boolean

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  CACHE_DIR: openwrt_cache

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache build environment
      uses: actions/cache@v3
      with:
        path: ${{ env.CACHE_DIR }}
        key: ${{ runner.os }}-immortalwrt-${{ hashFiles('**/.config') }}-${{ hashFiles('**/feeds.conf.default') }}

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

        # Setup ccache
        mkdir -p ${{ env.CACHE_DIR }}/ccache
        echo "max_size = 2.0G" > ${{ env.CACHE_DIR }}/ccache/ccache.conf

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Setup SSH debug session
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug == 'true' }}
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
        timeout: 30
        ports: 2222

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download packages
      run: cd openwrt && make download -j8

    - name: Compile the firmware
      run: |
        cd openwrt
        echo -e "$(nproc) thread build"
        make -j$(($(nproc) + 1)) V=s || make -j1 V=s

    - name: Upload firmware
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_Firmware
        path: openwrt/bin/targets/*/*
